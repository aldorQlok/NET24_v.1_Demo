// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NET24FilmBorrowSystem.Data;

#nullable disable

namespace NET24FilmBorrowSystem.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250821083621_DataSeeding")]
    partial class DataSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NET24FilmBorrowSystem.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReleaseYear = 2013,
                            Title = "The Conjuring"
                        });
                });

            modelBuilder.Entity("NET24FilmBorrowSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Aldor@gmail.com",
                            Name = "Aldor_Qlok"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Tobias@gmail.com",
                            Name = "Tobias"
                        });
                });

            modelBuilder.Entity("NET24FilmBorrowSystem.Models.UserMovies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FK_MovieId")
                        .HasColumnType("int");

                    b.Property<int>("FK_UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FK_MovieId");

                    b.HasIndex("FK_UserId");

                    b.ToTable("UserMovies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BorrowDate = new DateTime(2025, 8, 21, 10, 36, 21, 459, DateTimeKind.Local).AddTicks(8437),
                            FK_MovieId = 1,
                            FK_UserId = 1
                        });
                });

            modelBuilder.Entity("NET24FilmBorrowSystem.Models.UserMovies", b =>
                {
                    b.HasOne("NET24FilmBorrowSystem.Models.Movie", "Movie")
                        .WithMany("UserMovies")
                        .HasForeignKey("FK_MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NET24FilmBorrowSystem.Models.User", "User")
                        .WithMany("UserMovies")
                        .HasForeignKey("FK_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NET24FilmBorrowSystem.Models.Movie", b =>
                {
                    b.Navigation("UserMovies");
                });

            modelBuilder.Entity("NET24FilmBorrowSystem.Models.User", b =>
                {
                    b.Navigation("UserMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
